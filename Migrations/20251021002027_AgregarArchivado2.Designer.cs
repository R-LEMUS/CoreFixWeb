// <auto-generated />
using System;
using CoreFixWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreFixWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251021002027_AgregarArchivado2")]
    partial class AgregarArchivado2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreFixWeb.Data.Archivado", b =>
                {
                    b.Property<int>("ID_archivado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_archivado"));

                    b.Property<DateTime>("Fecha_archivado")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_reporte")
                        .HasColumnType("int");

                    b.Property<int>("ID_usuario")
                        .HasColumnType("int");

                    b.HasKey("ID_archivado");

                    b.HasIndex("ID_reporte");

                    b.HasIndex("ID_usuario");

                    b.ToTable("Archivados");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Equipo", b =>
                {
                    b.Property<int>("ID_equipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_equipo"));

                    b.Property<string>("Area_Produccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fecha_adquisicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_fabricacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_equipo");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Estado_reporte", b =>
                {
                    b.Property<int>("ID_estado_reporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_estado_reporte"));

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prioridad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_estado_reporte");

                    b.ToTable("Estado_reporte", (string)null);
                });

            modelBuilder.Entity("CoreFixWeb.Data.Evidencia", b =>
                {
                    b.Property<int>("ID_evidencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_evidencia"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_subida")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_reporte")
                        .HasColumnType("int");

                    b.Property<int>("ID_usuario")
                        .HasColumnType("int");

                    b.Property<int>("Numero_Evidencia")
                        .HasColumnType("int");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_evidencia");

                    b.HasIndex("ID_reporte");

                    b.HasIndex("ID_usuario");

                    b.ToTable("Evidencias");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Mantenimiento", b =>
                {
                    b.Property<int>("ID_mantenimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_mantenimiento"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipoID_equipo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_mantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_equipo")
                        .HasColumnType("int");

                    b.Property<int?>("ID_reporte")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Proximo_mantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_mantenimiento");

                    b.HasIndex("EquipoID_equipo");

                    b.HasIndex("ID_reporte");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Reporte", b =>
                {
                    b.Property<int>("ID_reporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_reporte"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fecha_cierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_reporte")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_equipo")
                        .HasColumnType("int");

                    b.Property<int>("ID_estado_reporte")
                        .HasColumnType("int");

                    b.Property<int?>("ID_supervisor_validador")
                        .HasColumnType("int");

                    b.Property<int?>("ID_tecnico_asignado")
                        .HasColumnType("int");

                    b.Property<int?>("ID_tecnico_validador")
                        .HasColumnType("int");

                    b.Property<int>("ID_usuario")
                        .HasColumnType("int");

                    b.Property<int>("Numero_Reporte")
                        .HasColumnType("int");

                    b.Property<string>("Prioridad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TecnicoValidadorID_usuario")
                        .HasColumnType("int");

                    b.HasKey("ID_reporte");

                    b.HasIndex("ID_equipo");

                    b.HasIndex("ID_estado_reporte");

                    b.HasIndex("ID_supervisor_validador");

                    b.HasIndex("ID_tecnico_asignado");

                    b.HasIndex("ID_usuario");

                    b.HasIndex("TecnicoValidadorID_usuario");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Usuario", b =>
                {
                    b.Property<int>("ID_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_usuario"));

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Archivado", b =>
                {
                    b.HasOne("CoreFixWeb.Data.Reporte", "Reporte")
                        .WithMany()
                        .HasForeignKey("ID_reporte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreFixWeb.Data.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("ID_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reporte");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Evidencia", b =>
                {
                    b.HasOne("CoreFixWeb.Data.Reporte", "Reporte")
                        .WithMany("Evidencias")
                        .HasForeignKey("ID_reporte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreFixWeb.Data.Usuario", "Usuario")
                        .WithMany("Evidencias")
                        .HasForeignKey("ID_usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reporte");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Mantenimiento", b =>
                {
                    b.HasOne("CoreFixWeb.Data.Equipo", "Equipo")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("EquipoID_equipo");

                    b.HasOne("CoreFixWeb.Data.Reporte", "Reporte")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("ID_reporte")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Equipo");

                    b.Navigation("Reporte");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Reporte", b =>
                {
                    b.HasOne("CoreFixWeb.Data.Equipo", "Equipo")
                        .WithMany("Reportes")
                        .HasForeignKey("ID_equipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreFixWeb.Data.Estado_reporte", "EstadoReporte")
                        .WithMany("Reportes")
                        .HasForeignKey("ID_estado_reporte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreFixWeb.Data.Usuario", "SupervisorValidador")
                        .WithMany()
                        .HasForeignKey("ID_supervisor_validador")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CoreFixWeb.Data.Usuario", "TecnicoAsignado")
                        .WithMany()
                        .HasForeignKey("ID_tecnico_asignado")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CoreFixWeb.Data.Usuario", "Usuario")
                        .WithMany("Reportes")
                        .HasForeignKey("ID_usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreFixWeb.Data.Usuario", "TecnicoValidador")
                        .WithMany()
                        .HasForeignKey("TecnicoValidadorID_usuario");

                    b.Navigation("Equipo");

                    b.Navigation("EstadoReporte");

                    b.Navigation("SupervisorValidador");

                    b.Navigation("TecnicoAsignado");

                    b.Navigation("TecnicoValidador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Equipo", b =>
                {
                    b.Navigation("Mantenimientos");

                    b.Navigation("Reportes");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Estado_reporte", b =>
                {
                    b.Navigation("Reportes");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Reporte", b =>
                {
                    b.Navigation("Evidencias");

                    b.Navigation("Mantenimientos");
                });

            modelBuilder.Entity("CoreFixWeb.Data.Usuario", b =>
                {
                    b.Navigation("Evidencias");

                    b.Navigation("Reportes");
                });
#pragma warning restore 612, 618
        }
    }
}
